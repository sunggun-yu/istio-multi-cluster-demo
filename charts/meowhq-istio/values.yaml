# =============================================================================
# global configuration for all components including istio sub-charts
# =============================================================================
global:
  istioNamespace: istio-system
  gatewayNamespace: istio-system
  priorityClass: infra-critical

# =============================================================================
# istio base Helm Chart configuration
# =============================================================================
base:
  enabled: true
  defaultRevision: default

# =============================================================================
# istiod Helm Chart configuration
# =============================================================================
istiod:
  enabled: true
  meshConfig:
    accessLogFile: /dev/stdout
    enableTracing: true
    defaultConfig:
      holdApplicationUntilProxyStarts: true

      ## ----------------------------------------------------------------------
      ## below is for the istio multicluster setup: defaultConfig.proxyMetadata
      ## ----------------------------------------------------------------------
      # proxyMetadata:
      #   # Enable basic DNS proxying
      #   ISTIO_META_DNS_CAPTURE: "true"
      #   # Enable automatic address allocation, optional
      #   ISTIO_META_DNS_AUTO_ALLOCATE: "true"

      ## ----------------------------------------------------------------------
      ## below is for the tracing setup: defaultConfig.tracing
      ## ----------------------------------------------------------------------
      # tracing:
      #   sampling: 100.0
      #   zipkin:
      #     address: otelc-collector.opentelemetry-operator.svc.cluster.local:9411

  # global configuration for istiod
  # istiod.global can be configured under global section
  global:
    configValidation: true
    logging:
      level: "default:debug"
    proxy:
      logLevel: debug
      # Resources for the sidecar.
      resources:
        # default values in istiod chart are 100m and 128Mi
        requests:
          cpu: 10m
          memory: 40Mi
        # default values in istiod chart are 2000m and 1024Mi
        limits:
          cpu: 2000m
          memory: 1024Mi

    ## ------------------------------------------------------------------------
    ## below for the istio-csr integration for Vault PKI - istio multicluster setup
    ## istiod.global.caAddress: "cert-manager-istio-csr.istio-system.svc:443"
    ## ------------------------------------------------------------------------
    # caAddress: "cert-manager-istio-csr.istio-system.svc:443"

    ## ------------------------------------------------------------------------
    ## below for the istio multicluster setup
    ## istiod.global.meshID: "change-me-to-the-mesh-name"
    ## istiod.global.network: "change-me-to-the-cluster-name"
    ## istiod.global.multiCluster.enabled: true
    ## istiod.global.multiCluster.clusterName: "change-me-to-the-cluster-name"
    ## ------------------------------------------------------------------------
    # meshID: "change-me-to-the-mesh-name"
    # network: "change-me-to-the-cluster-name"
    # multiCluster:
    #   enabled: true
    #   clusterName: "change-me-to-the-cluster-name"

  pilot:
    autoscaleEnabled: true
    autoscaleMin: 2
    podAnnotations:
      # just copying from existing - maybe not needed
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    resources:
      # default values in istiod chart are 500m and 2048Mi
      requests:
        cpu: 10m
        memory: 100Mi
    ## ------------------------------------------------------------------------
    ## below for the istio-csr integration for Vault PKI - istio multicluster setup
    ## ------------------------------------------------------------------------
    # env:
    #   ENABLE_CA_SERVER: false

# =============================================================================
# istio-gateway Helm Chart configuration : Ingress Gateway
# (aliased as ingressgateway)
# =============================================================================
ingressgateway:
  enabled: true
  name: istio-ingressgateway
  revision: "default"
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    # istio: istio-ingressgateway
  podAnnotations:
    # just copying from existing - maybe not needed
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  service:
    loadBalancerIP: ""
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8

# =============================================================================
# istio-gateway Helm Chart configuration : Cross Network Gateway
# (aliased as cross-network-gateway)
# -----------------------------------------------------------------------------
# this gateway is for istio multicluster setup
# =============================================================================
cross-network-gateway:
  enabled: true
  name: istio-cross-network-gateway
  revision: "default"
  labels:
    istio: cross-network-gateway
    app: istio-cross-network-gateway
  # If specified, the gateway will act as a network gateway for the given network.
  # set cluster name as network name to set up istio multi primary on different multi network configuration
  networkGateway: change-me-to-the-cluster-name
  podAnnotations:
    # just copying from existing - maybe not needed
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  service:
    loadBalancerIP: ""
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
